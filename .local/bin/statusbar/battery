#!/usr/bin/env sh
# Give a battery name (e.g. BAT0) as an argument.

case $BLOCK_BUTTON in
    3) pgrep -x dunst >/dev/null && notify-send "üîã Battery module" "üîã: discharging
N: not charging
n: stagnant charge
C: charging
F: charged
L: battery very low!
- Text color reflects charge left" ;;
esac

batLs="$(ls /sys/class/power_supply | grep BAT | tr '\n' ' ')"
batArr=(${batLs})
batArrLen=${#batArr[@]}
energy=0
energy_full=0
energy_full_design=0
str=""
stat=""
acpower=0
color=""

for idx in "${!batArr[@]}"; do
  e=$(cat /sys/class/power_supply/"${batArr[${idx}]}"/energy_now           ) || exit
  ef=$(cat /sys/class/power_supply/"${batArr[${idx}]}"/energy_full         ) || exit
  efd=$(cat /sys/class/power_supply/"${batArr[${idx}]}"/energy_full_design ) || exit
  c=$(cat /sys/class/power_supply/"${batArr[${idx}]}"/capacity             ) || exit
  stat=$(cat /sys/class/power_supply/"${batArr[${idx}]}"/status)
  [ "${stat}" = "Charging" ] && acpower=1

  str="${str}${idx}:{$(cat /sys/class/power_supply/"${batArr[${idx}]}"/status)= $(echo "${c}" | sed -e 's/$/%/')} "
  energy=$(expr ${energy} + ${e})
  energy_full=$(expr ${energy_full} + ${ef})
  energy_full_design=$(expr ${energy_full_design} + ${efd})
done

energy_per=$(expr $(expr ${energy} \* 100 ) / ${energy_full})
energy_total_per=$(expr $(expr ${energy} \* 100 ) / ${energy_full_design})
str=$(echo ${str} | sed -e "s/,//;s/Discharging/üîã/;s/Not charging/üõë/;s/Charging/üîå/;s/Unknown/‚ôªÔ∏è/;s/Full/‚ö°/;s/ 0*/ /g;s/ :/ /g")

if [ "$energy_per" -ge 70 ]; then
	color="#00ff00"
elif [ "$energy_per" -ge 50 ]; then
	color="#ffffff"
elif [ "$energy_per" -ge 22 ]; then
	color="#ffff00"
else
	color="#ff0000"
	warn="‚ùó"
fi

[ -z $warn ] && warn=" "

[ "${acpower}" = 1 ] && color="#ffffcc"

printf "<span color='%s'>%s%s%s</span>\n" "$color" "${status}" "$warn" "${str} || $(echo "$energy_per" | sed -e 's/$/%/') : $(echo "$energy_total_per" | sed -e 's/$/%/')"
