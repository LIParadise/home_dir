autoload -U +X bashcompinit && bashcompinit
autoload -U +X compinit && compinit

# If you come from bash you might have to change your $PATH.
  # export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/home/team08/Chu Han/.oh-my-zsh"
export ZDOTDIR="/home/team08/Chu Han/.zsh"
export LM_LICENSE_FILE="${LM_LICENSE_FILE}:26585@lsntu:26585@lsncku"

# Path for golang
  export GOPATH=$HOME/go

DISABLE_AUTO_UPDATE="true"

# Set name of the theme to load --- if set to "random", it will
  # load a random theme each time oh-my-zsh is loaded, in which case,
    # to know which specific one was loaded, run: echo $RANDOM_THEME
    # See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
    ZSH_THEME="gentoo"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
  # ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
  # CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
  # HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
  # COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
  # under VCS as dirty. This makes repository status check for large repositories
    # much, much faster.
    # DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
  # stamp shown in the history command output.
  # You can set one of the optional three formats:
  # "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
  # or set a custom format using the strftime function format specifications,
  # see 'man strftime' for details.
    # HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
git
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
  # if [[ -n $SSH_CONNECTION ]]; then
    #   export EDITOR='vim'
    # else
      #   export EDITOR='mvim'
      # fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
  #
  # Example aliases
  # alias zshconfig="mate ~/.zshrc"
  # alias ohmyzsh="mate ~/.oh-my-zsh"

alias cp="cp -i"
alias mv="mv -i"
alias rm="rm -i"
alias ll="ls -alF"
alias so="source $HOME/.zshrc"
alias ressh="sudo service ssh --full-restart"
alias tool="source /opt/CAD/tools"
alias which-command="whence"
export HISTFILE="/home/team08/Chu Han/.zsh_history"
export VIMINIT='source $MYVIMRC'
export MYVIMRC='/home/team08/Chu Han/.vimrc'

function dev-tmux {
  tmux -f "/home/team08/Chu Han/.tmux.conf" new-session -d -n work 

  tmux new-window -n testing -c "${PWD}"
  tmux split-window -h -c "${PWD}"
  tmux selectp -t 0

  tmux new-window -n files -c "${PWD}"
  tmux split-window -h -c "${PWD}"
  tmux selectp -t 0

  tmux new-window -n misc -c "${PWD}"

  tmux selectw -t 0
  tmux -2 attach-session -d
}

function Tmux {
  /usr/bin/env tmux -f "/home/team08/Chu Han/.tmux.conf" new-session -d
  /usr/bin/env tmux -2 attach-session -d -c `pwd -P`
}

function sshgit {

  key=

  if [[ ! -z "${1}" ]] ; then
    key="${1}"
  else
    key="$HOME/.ssh/id_rsa_a58524andy"
  fi

  if [[ ! -z $SSH_AGENT_PID ]] ; then
    if ps -p $SSH_AGENT_PID > /dev/null
    then
      echo "ssh-agent shall be running"
    else
      echo "weird, \$SSH_AGENT_PID is set but no ssh-agent process found"
      echo "trying directly add the key"
    fi
  else
    echo "eval \$(ssh-agent -s)"
    eval $(ssh-agent -s)
  fi

  ssh-add $key
}

function delsshgit {

  # set variables
  key=
  if [[ ! -z "${1}" ]] ; then
    key="${1}"
  else
    key="$HOME/.ssh/id_rsa_a58524andy.pub"
  fi

  # check if ssh-agent is present; if so, delete the identity.
  if [[ ! -z $SSH_AGENT_PID ]] ; then
    if ps -p $SSH_AGENT_PID > /dev/null 
    then 
      # "SSH_AGENT_PID" environmental variable is set
      # and the process is present
      # directly delete the key from it
      echo ""
      echo "found ssh-agent process, of which PID is $SSH_AGENT_PID"
      echo ""
      echo "ssh-add -d $key"
      echo ""
      echo "====================================="
      ssh-add -d $key
      echo "====================================="
      echo ""
      echo ""
    else
      echo "weird, \$SSH_AGENT_PID is set but no ssh-agent process found"
    fi
  else
    echo "\$SSH_AGENT_PID not set, abort"
  fi
}

command -v nWave >/dev/null 2>&1 || tool 2 > /dev/null 2>&1
